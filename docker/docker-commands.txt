##### Docker and Git commands cheatsheet version 49 #####

##### SSH connection commands in Linux #####
ssh -i ~/.ssh/daines-west-keypair.pem ubuntu@<instance IP>
scp -i ~/.ssh/daines-west-keypair.pem <File Path/Name> ubuntu@<instance IP>:/home/ubuntu


##### Container prep commands #####
$ mkdir container # Off the /home/docker directory

scp /c/Users/<user name>/docker_setup/quantfin/quantfin.env docker@quantfinx:/home/docker/container
scp /c/Users/<user name>/docker_setup/quantfin/Dockerfile-quantfin.txt docker@quantfinx:/home/docker/container/Dockerfile
scp /c/Users/<user name>/docker_setup/quantfin/id_rsa_docker docker@quantfinx:/home/docker/container

scp /c/Users/<user name>/docker_setup/pythonml/pythonml.env docker@pythonmlx:/home/docker/container
scp /c/Users/<user name>/docker_setup/pythonml/Dockerfile-pythonml.txt docker@pythonmlx:/home/docker/container/Dockerfile
scp /c/Users/<user name>/docker_setup/pythonml/id_rsa_docker docker@pythonmlx:/home/docker/container

scp /c/Users/<user name>/docker_setup/anaconda/anaconda.env docker@anacondax:/home/docker/container
scp /c/Users/<user name>/docker_setup/anaconda/Dockerfile-anaconda.txt docker@anacondax:/home/docker/container/Dockerfile
scp /c/Users/<user name>/docker_setup/anaconda/id_rsa_docker docker@anacondax:/home/docker/container

scp /c/Users/<user name>/docker_setup/webscrape/webscrape.env docker@webscrapex:/home/docker/container
scp /c/Users/<user name>/docker_setup/webscrape/Dockerfile-webscrape.txt docker@webscrapex:/home/docker/container/Dockerfile
scp /c/Users/<user name>/docker_setup/webscrape/id_rsa_docker docker@webscrapex:/home/docker/container

scp /c/Users/<user name>/docker_setup/rstudio/.Renviron docker@rstudiox:/home/docker/container
scp /c/Users/<user name>/docker_setup/rstudio/Dockerfile-rstudio.txt docker@rstudiox:/home/docker/container/Dockerfile
scp /c/Users/<user name>/docker_setup/rstudio/id_rsa_docker docker@rstudiox:/home/docker/container

ssh -T git@github.com

git clone git@github.com:daines-analytics/development-2021.git
git clone https://github.com/daines-analytics/development-2020.git

git clone git@github.com:daines-analytics/datasets-public.git
git clone git@github.com:daines-analytics/deep-learning-projects.git
git clone git@github.com:daines-analytics/quant-finance-projects.git
git clone git@github.com:daines-analytics/tabular-data-projects.git
git clone git@github.com:daines-analytics/template-latest.git
git clone git@github.com:daines-analytics/time-series-projects.git
git clone git@github.com:daines-analytics/web-scraping-projects.git

git fetch --all ; git reset --hard origin/master

split -b 25M -d -a 3 train.zip train.zip.
cat train.zip.{000..020} > train-new.zip
diff --speed-large-files train.zip train-new.zip
cat train.csv.gz.* > ./train.csv.gz ; gzip -d train.csv.gz

jupyter notebook password  # Run server at least once first!

jupyter nbconvert --to html SCRIPT_NAME.ipynb

docker cp <mycontainer>:/home/pythonml/<Git-parent-directory>/<project-folder>/<file>.ipynb ./


##### Quantfin container commands #####
docker image build -t quantfin/nonroot:v1 .

docker container run --rm -it --env-file quantfin.env -p 8080:8080 --name quantfin-server quantfin/nonroot:v1 /bin/bash

/opt/conda/bin/jupyter lab --ip=0.0.0.0 --port=8080 --no-browser --notebook-dir=/home/quantfin


##### PythonML container commands #####
docker image build -t pythonml/nonroot:v2 .

docker container run --rm -it --env-file pythonml.env -p 8080:8080 --name pythonml-server pythonml/nonroot:v2 /bin/bash

jupyter lab --ip=0.0.0.0 --port=8080 --no-browser --notebook-dir=/home/pythonml


##### TensorFlowML container commands #####
docker image build -t tensorflowml/nonroot:v1 .

docker container run --rm -it --env-file tensorflowml.env -p 8080:8080 --name tensorflowml-server tensorflowml/nonroot:v1 /bin/bash

jupyter lab --ip=0.0.0.0 --port=8080 --no-browser --notebook-dir=/home/tensorflowml


##### PyTorchML container commands #####
docker image build -t pytorchml/nonroot:v1 .

docker container run --rm -it --env-file pytorchml.env -p 8080:8080 --name pytorchml-server pytorchml/nonroot:v1 /bin/bash

jupyter lab --ip=0.0.0.0 --port=8080 --no-browser --notebook-dir=/home/pytorchml


##### Anaconda container commands #####
docker image build -t anaconda/nonroot:v3 .

docker container run --rm -it --env-file anaconda.env -p 8080:8080 --name anaconda-server anaconda/nonroot:v3 /bin/bash

/opt/conda/bin/jupyter lab --ip=0.0.0.0 --port=8080 --no-browser --notebook-dir=/home/anaconda


##### Webscrape container commands #####
docker image build -t webscrape/nonroot:v1 .

docker container run --rm -it --env-file webscrape.env -p 8080:8080 --name webscrape-server webscrape/nonroot:v1 /bin/bash

jupyter lab --ip=0.0.0.0 --port=8080 --no-browser --notebook-dir=/home/webscrape


##### RStudio container commands #####
docker image build -t rstudio/nonroot:v2 .

docker container run --rm -e PASSWORD=rserver -p 8787:8787 --name rstudio-server rstudio/nonroot:v2


##### AWS Ubuntu AMI commands #####
jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --notebook-dir=/home/ubuntu


##### FastAI AWS Deep Learning AMI (Ubuntu) commands #####
$ git clone https://github.com/fastai/course-v3
$ conda update conda
$ conda install -c pytorch -c fastai fastai pytorch
$ cd course-v3/nbs/dl1
$ jupyter notebook


##### AWS EC2 Setup for FastAI #####
sudo apt-get update | sudo apt-get upgrade | sudo apt-get autoremove

git clone https://github.com/daines-analytics/template-latest.git

git clone https://github.com/daines-analytics/deep-learning-projects.git

git clone https://github.com/fastai/course-v3

for TensorFlow(+Keras2) with Python3 (CUDA 10.0 and Intel MKL-DNN) -> source activate tensorflow_p36
for PyTorch with Python3 (CUDA 10.0 and Intel MKL) -> source activate pytorch_p36

conda update conda

conda install -c pytorch -c fastai fastai pytorch torchvision cuda92

cd course-v3/nbs/dl1

source ./conda_unix.txt
jupyter notebook


##### AWS EC2 Setup for TensorFlow on Ubuntu
sudo apt-get update
sudo apt-get upgrade -y

# Add NVIDIA package repositories
wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo apt-get update
wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt-get update

# Install NVIDIA driver
# sudo apt-get install --no-install-recommends nvidia-driver-418
sudo apt-get install -y nvidia-driver-440

# Reboot. Check that GPUs are visible using the command: nvidia-smi

# Install development and runtime libraries (~4GB)
# sudo apt-get install --no-install-recommends \
#     cuda-10-0 \
#     libcudnn7=7.6.2.24-1+cuda10.0  \
#     libcudnn7-dev=7.6.2.24-1+cuda10.0
sudo apt-get install -y cuda-10-0 libcudnn7 libcudnn7-dev

# sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1
# sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2
# sudo update-alternatives --set python /usr/bin/python3.6

sudo apt install -y python3-pip
sudo pip3 install --upgrade pip
sudo pip3 install numpy scipy matplotlib ipython sympy pandas jupyterlab
sudo pip3 install PyMySQL imbalanced-learn xgboost scikit-learn statsmodels
sudo pip3 install seaborn pmdarima lxml html5lib requests beautifulsoup4
sudo pip3 install tensorflow tensorflow-gpu keras
jupyter lab --no-browser
